//-----------------------------------------------------------------------------
//	Copyright Alex Parker © 2011
//-----------------------------------------------------------------------------
#include "stdafx.h"

//-----------------------------------------------------------------------------
// Includes 
//-----------------------------------------------------------------------------
#include "Thread/Thread.h"

//-----------------------------------------------------------------------------
// Namespace 
//-----------------------------------------------------------------------------

namespace thread
{

//-----------------------------------------------------------------------------
// Class Definition 
//-----------------------------------------------------------------------------

Thread::Thread(
	ThreadStart callback
) : m_hThread( NULL ),
	m_threadID( static_cast<DWORD>(-1) ),
	m_isRunning(false)
{
	m_callback = callback;
}

//-----------------------------------------------------------------------------

Thread::~Thread()
{
}

//-----------------------------------------------------------------------------

bool 
Thread::Run( 
)
{
	m_isRunning = true;

	m_hThread = ::CreateThread( NULL, 0, StartThread, this, 0, &m_threadID );
	return (m_hThread != NULL);
}

//-----------------------------------------------------------------------------

DWORD WINAPI 
Thread::StartThread( 
	void* pParam 
)
{
	Thread* pInstance = reinterpret_cast<Thread*>( pParam );

	if (pInstance)
	{
		pInstance->m_callback();
	}

	pInstance->m_isRunning = false;
	return 0;
}

//-----------------------------------------------------------------------------

}//namespace thread